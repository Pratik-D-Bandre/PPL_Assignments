   c:   64 48 8b 04 25 28 00    mov    %fs:0x28,%rax
  13:   00 00
  15:   48 89 45 f8             mov    %rax,-0x8(%rbp)
  19:   31 c0                   xor    %eax,%eax
  1b:   c7 45 ec 01 00 00 00    movl   $0x1,-0x14(%rbp)
  22:   c7 45 f0 02 00 00 00    movl   $0x2,-0x10(%rbp)
  29:   c7 45 f4 03 00 00 00    movl   $0x3,-0xc(%rbp)
  30:   c7 45 d4 00 00 00 00    movl   $0x0,-0x2c(%rbp)
  37:   eb 16                   jmp    4f <main+0x4f>
  39:   8b 45 d4                mov    -0x2c(%rbp),%eax
  3c:   48 98                   cltq
  3e:   8b 54 85 ec             mov    -0x14(%rbp,%rax,4),%edx
  42:   8b 45 d4                mov    -0x2c(%rbp),%eax
  45:   48 98                   cltq
  47:   89 54 85 e0             mov    %edx,-0x20(%rbp,%rax,4)
  4b:   83 45 d4 01             addl   $0x1,-0x2c(%rbp)
  4f:   83 7d d4 02             cmpl   $0x2,-0x2c(%rbp)
  53:   7e e4                   jle    39 <main+0x39>
  55:   48 8d 45 e0             lea    -0x20(%rbp),%rax
  59:   48 89 45 d8             mov    %rax,-0x28(%rbp)
  5d:   48 8b 45 d8             mov    -0x28(%rbp),%rax
  61:   48 83 c0 08             add    $0x8,%rax
  65:   c7 00 05 00 00 00       movl   $0x5,(%rax)
  6b:   b8 00 00 00 00          mov    $0x0,%eax
  70:   48 8b 4d f8             mov    -0x8(%rbp),%rcx
  74:   64 48 33 0c 25 28 00    xor    %fs:0x28,%rcx
  7b:   00 00
  7d:   74 05                   je     84 <main+0x84>
  7f:   e8 00 00 00 00          callq  84 <main+0x84>
                        80: R_X86_64_PLT32      __stack_chk_fail-0x4
  84:   c9                      leaveq
  85:   c3                      retq